# Same as Black.
line-length = 88
indent-width = 4

# Assume Python 3.10
target-version = "py310"

# Don't check dependencies.
exclude = ["dependencies/**"]

# treat all python packages as namespace packages
namespace-packages = [
    "code/aidara_bringup",
    "code/aidara_bringup/launch",
    "code/aidara_common",
    "code/camera_calibration",
    "code/geometric_grasp",
    "code/gripper_controller",
    "code/hand_position",
    "code/llm_planning",
    "code/rerun_manager",
    "code/speech_to_text",
    "code/staubli_controller",
    "code/text_to_speech",
    "code/tf2_service",
    "code/top_level_actions",
    "code/trajectory_planning"
]

[lint]
# Enable all rules.
select = ["ALL"]
ignore = ["ANN101", "ANN102", "D203", "D212", "D417", "S602"]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[lint.isort]
known-local-folder = [
    "aidara_bringup",
    "aidara_common",
    "aidara_msgs",
    "camera_calibration",
    "geometric_grasp",
    "gripper_controller",
    "hand_position",
    "llm_planning",
    "speech_to_text",
    "staubli_controller",
    "text_to_speech",
    "tf2_service",
    "top_level_actions",
    "trajectory_planning"
]

[lint.mccabe]
# Flag error (`C901`) whenever the complexity level exceeds 4.
max-complexity = 4

[lint.pydocstyle]
convention = "google"

[format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"
